name: Documentation

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          use-mamba: true
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: anaconda-client-env
      
      - name: Prepare EdelweissFE
        shell: bash -l {0}
        run: |
          git clone https://github.com/EdelweissFE/EdelweissFE.git
          cd EdelweissFE
          mamba install -c conda-forge -c anaconda --file requirements.txt
          cd ..

      - name: Install Eigen
        shell: bash -l {0}
        run: |
          git clone https://gitlab.com/libeigen/eigen.git
          cd eigen 
          mkdir build
          cd build 
          cmake -DBUILD_TESTING=OFF  -DINCLUDE_INSTALL_DIR=$(python -c "import sys; print(sys.prefix)")/include -DCMAKE_INSTALL_PREFIX=$(python -c "import sys; print(sys.prefix)") ..
          make install
          cd ../..

      - name: Install Autodiff
        shell: bash -l {0}
        run: |
          git clone https://github.com/autodiff/autodiff.git
          cd autodiff
          mkdir build
          cd build
          cmake -DAUTODIFF_BUILD_TESTS=OFF -DAUTODIFF_BUILD_PYTHON=OFF -DAUTODIFF_BUILD_EXAMPLES=OFF -DAUTODIFF_BUILD_DOCS=OFF -DCMAKE_INSTALL_PREFIX=$(python -c "import sys; print(sys.prefix)") ..
          make install
          cd ../..

      - name: Install Marmot
        shell: bash -l {0}
        run: |
          git clone --recurse-submodules https://github.com/MAteRialMOdelingToolbox/Marmot/
          cd Marmot
          mkdir build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=$(python -c "import sys; print(sys.prefix)")  ..
          make install
          cd ../../

      - name: Build EdelweissFE
        shell: bash -l {0}
        run: |
          cd EdelweissFE
          python setup.py build_ext -i
          cd ..

      - name: Building Buzzard documentation
        shell: bash -l {0}
        run: |
          pip install -r requirements.txt
          export EDELWEISS_PATH="/home/runner/work/Buzzard/EdelweissFE"
          echo $EDELWEISS_PATH
          sphinx-build ./doc/source/ ./docs -b html
          
      - name: Run Buzzard tests
        shell: bash -l {0}
        run: |
          export EDELWEISS_PATH=/home/runner/work/Buzzard/EdelweissFE
          python run_tests.py 
          
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          publish_dir: ./docs
          publish_branch: gh-pages


